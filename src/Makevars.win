BLAS_CXXFLAGS_USE =
USE_OPEN_BLAS =

OPEN_BLAS_DIR = C:/OpenBLAS/
ifneq "$(wildcard $(OPEN_BLAS_DIR))" ""
	BLAS_CXXFLAGS_USE = -I"C:/OpenBLAS/include" -lopenblas
	USE_OPEN_BLAS = -D USE_OPEN_BLAS
	BLAS_LIBS_USE = c:/OpenBLAS/lib/libopenblas.a
else
	BLAS_LIBS_USE = $(BLAS_LIBS)
endif

SOURCES_C = stats/lm.c
SOURCES_CPP = LAPACK_BLAS_wrapper.cpp arma_utils.cpp Cdqrls_wrapper.cpp RcppExports.cpp bigglm_wrapper.cpp ddhazard_fit.cpp loglike.cpp risk_obj.cpp ddhazard_EKF_solver.cpp ddhazard_UKF_solver.cpp ddhazard_SMA_solver.cpp ddhazard_GMA_solver.cpp
SOURCES_F = biglm/boundedQRf.f dchur.f
CXX_STD = CXX11
OBJECTS =$(SOURCES_CPP:.cpp=.o)  $(SOURCES_C:.c=.o) $(SOURCES_F:.f=.o)

## PKG_CFLAGS & PKG_CXXFLAGS C and C++ flags
PKG_CXXFLAGS = $(BLAS_CXXFLAGS_USE) $(USE_OPEN_BLAS) $(SHLIB_PTHREAD_FLAGS)
## PKG_LIBS: Linker flags
PKG_LIBS =  $(LAPACK_LIBS) $(BLAS_CXXFLAGS_USE) $(FLIBS) $(SHLIB_PTHREAD_FLAGS) $(USE_OPEN_BLAS)

ifeq "$(WIN)" "64"
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS_USE) $(FLIBS) $(SHLIB_PTHREAD_FLAGS) $(USE_OPEN_BLAS) -D ARMA_64BIT_WORD
else
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS_USE) $(FLIBS) $(SHLIB_PTHREAD_FLAGS) $(USE_OPEN_BLAS)
endif

DD_DEPS = arma_n_rcpp.h ddhazard_problem_data.h ddhazard.h
BIGGLM_DEPS = arma_n_rcpp.h bigglm_wrapper.h

ifeq "$(wildcard $(OPEN_BLAS_DIR))" ""
all: $(SHLIB)
		@echo "Did not find $(OPEN_BLAS_DIR) and will compile with BLAS used by R"
else
all: $(SHLIB)
		@echo "Found $(OPEN_BLAS_DIR) and will compile with openBlas"
endif

$(SHLIB): $(OBJECTS)

loglike.o: arma_n_rcpp.h loglike.cpp

Cdqrls_wrapper.o: $(BIGGLM_DEPS) Cdqrls_wrapper.cpp

bigglm_wrapper.o: $(BIGGLM_DEPS) bigglm_wrapper.cpp

ddhazard.o: $(DD_DEPS) $(BIGGLM_DEPS) thread_pool.h ddhazard.cpp

ddhazard_EKF_solver.o: $(DD_DEPS) exp_model_funcs.h thread_pool.h ddhazard_EKF_solver.cpp

ddhazard_UKF_solver.o: $(DD_DEPS) exp_model_funcs.h ddhazard_UKF_solver.cpp

ddhazard_posterior_approx_solver.o: $(DD_DEPS) exp_model_funcs.h ddhazard_posterior_approx_solver.cpp
