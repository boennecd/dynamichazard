Sys.setenv(GS_CMD="C:/Program Files/gs/gs9.20/bin/gswin64c.exe")
devtools::build(
  args = c("--compact-vignettes=gs+qpdf"), quiet = F, manual = TRUE)
devtools::build(
  args = c("--compact-vignettes=gs+qpdf"), quiet = F, vignettes = FALSE,
  manual = TRUE)

Sys.setenv(GS_CMD="C:/Program Files/gs/gs9.20/bin/gswin64c.exe")
# devtools::submit_cran(args = c("--compact-vignettes=gs+qpdf"))

Sys.setenv(GS_CMD="C:/Program Files/gs/gs9.20/bin/gswin64c.exe")
devtools::check(build_args = c("--compact-vignettes=gs+qpdf"))

Sys.setenv(GS_CMD="C:/Program Files/gs/gs9.20/bin/gswin64c.exe")
devtools::build_win(version = "R-release", args = "--compact-vignettes=gs+qpdf")
devtools::build_win(version = "R-devel", args = "--compact-vignettes=gs+qpdf")

# Avoid the Sys.getenv by making a .Rprofile file like:
  # See https://stackoverflow.com/a/37198142 and https://support.rstudio.com/hc/en-us/community/posts/203035636-global-environment-variable
  Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.21\\bin\\gswin64c.exe")

library(tools)
out <- check_packages_in_dir(
  "..", # assumes that there is .tar.gz file in parent directory with this package
  check_args = c("--as-cran"),
  reverse = list(repos = getOption("repos")["CRAN"],
                 which = "all"),
  Ncpus = 4)

out <- devtools::revdep_check(
  pkg = ".",
  recursive = TRUE,
  threads = 4)


rhub::platforms()
rhub::check(path = "C:\\Users\\User\\Dropbox\\skole_backup\\phd\\dynamichazard_0.5.0.tar.gz",
            platform = "debian-gcc-devel", show_status = FALSE,
            check_args = "--no-build-vignettes" # Due to latex packages
            )




# ######
# # Debugging what takes time
# files <- list.files("tests/testthat")
# files <- files[grepl("^test", files)]
#
# time_taken <- sapply(files, function(f){
#   cat("Running", sQuote(f), "\n")
#   print(out <- system.time(testthat::test_file(paste0("tests/testthat/", f))))
#   cat("\n")
#
#   out
# })
#
# time_taken <- t(time_taken)
# time_taken[order(time_taken[, "elapsed"], decreasing = TRUE), ]
# sum(time_taken[, "elapsed"])

# ######
# # To test a particular file
# system.time(testthat::test_file("tests/testthat/test_PF.R")))
#
# # Or use:
# test_that <- function(desc, code){
#   cat("\nRunning", sQuote(desc), "\n")
#   .time <- system.time(out <- testthat::test_that(desc, code))
#   print(.time)
#   cat("\n")
#
#   out
# }


Sys.setenv(NOT_CRAN = "true")
